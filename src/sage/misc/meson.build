py.install_sources(
  '__init__.py',
  'abstract_method.py',
  'all.py',
  'all__sagemath_environment.py',
  'all__sagemath_objects.py',
  'all__sagemath_repl.py',
  'allocator.pxd',
  'banner.py',
  'benchmark.py',
  'binary_tree.pxd',
  'bindable_class.py',
  'c3_controlled.pxd',
  'cachefunc.pxd',
  'call.py',
  'classcall_metaclass.pxd',
  'classgraph.py',
  'compat.py',
  'converting_dict.py',
  'copying.py',
  'cython.py',
  'decorators.py',
  'defaults.py',
  'dev_tools.py',
  'edit_module.py',
  'element_with_label.py',
  'explain_pickle.py',
  'fast_methods.pxd',
  'flatten.py',
  'func_persist.py',
  'function_mangling.pxd',
  'functional.py',
  'gperftools.py',
  'html.py',
  'inherit_comparison.pxd',
  'inline_fortran.py',
  'latex.py',
  'latex_macros.py',
  'latex_standalone.py',
  'lazy_format.py',
  'lazy_import_cache.py',
  'lazy_list.pxd',
  'lazy_string.pxd',
  'map_threaded.py',
  'mathml.py',
  'messaging.py',
  'method_decorator.py',
  'misc.py',
  'misc_c.pxd',
  'mrange.py',
  'multireplace.py',
  'namespace_package.py',
  'nested_class.pxd',
  'object_multiplexer.py',
  'package.py',
  'package_dir.py',
  'pager.py',
  'prandom.py',
  'profiler.py',
  'proof.py',
  'python.py',
  'random_testing.py',
  'randstate.pxd',
  'remote_file.py',
  'repr.py',
  'rest_index_of_methods.py',
  'sage_eval.py',
  'sage_input.py',
  'sage_timeit.py',
  'sage_unittest.py',
  'sagedoc.py',
  'sagedoc_conf.py',
  'sageinspect.py',
  'search.pxd',
  'sh.py',
  'sphinxify.py',
  'superseded.py',
  'table.py',
  'temporary_file.py',
  'test_class_pickling.py',
  'test_nested_class.py',
  'timing.py',
  'trace.py',
  'unknown.py',
  'verbose.py',
  'viewer.py',
  'weak_dict.pxd',
  subdir: 'sage/misc',
)

extension_data = {
  'allocator' : files('allocator.pyx'),
  'binary_tree' : files('binary_tree.pyx'),
  'c3' : files('c3.pyx'),
  'c3_controlled' : files('c3_controlled.pyx'),
  'cachefunc' : files('cachefunc.pyx'),
  'callable_dict' : files('callable_dict.pyx'),
  'citation' : files('citation.pyx'),
  'classcall_metaclass' : files('classcall_metaclass.pyx'),
  'constant_function' : files('constant_function.pyx'),
  'derivative' : files('derivative.pyx'),
  'fast_methods' : files('fast_methods.pyx'),
  'fpickle' : files('fpickle.pyx'),
  'function_mangling' : files('function_mangling.pyx'),
  'inherit_comparison' : files('inherit_comparison.pyx'),
  'instancedoc' : files('instancedoc.pyx'),
  'lazy_attribute' : files('lazy_attribute.pyx'),
  'lazy_import' : files('lazy_import.pyx'),
  'lazy_list' : files('lazy_list.pyx'),
  'lazy_string' : files('lazy_string.pyx'),
  'misc_c' : files('misc_c.pyx'),
  'nested_class' : files('nested_class.pyx'),
  'parser' : files('parser.pyx'),
  'persist' : files('persist.pyx'),
  'pickle_old' : files('pickle_old.pyx'),
  'randstate' : files('randstate.pyx'),
  'reset' : files('reset.pyx'),
  'sage_ostools' : files('sage_ostools.pyx'),
  'sage_timeit_class' : files('sage_timeit_class.pyx'),
  'search' : files('search.pyx'),
  'session' : files('session.pyx'),
  'stopgap' : files('stopgap.pyx'),
  'weak_dict' : files('weak_dict.pyx'),
}

foreach name, pyx : extension_data
  deps = [py_dep, gmp]
  if name == 'binary_tree'
    deps += [cysignals]
  endif

  py.extension_module(
    name,
    sources: pyx,
    subdir: 'sage/misc',
    install: true,
    include_directories: [inc_cpython, inc_rings],
    dependencies: deps,
  )
endforeach

