# distutils: libraries = flint
# distutils: depends = flint/mpf_vec.h

################################################################################
# This file is auto-generated by the script
#   SAGE_ROOT/src/sage_setup/autogen/flint_autogen.py.
# From the commit 3e2c3a3e091106a25ca9c6fba28e02f2cbcd654a
# Do not modify by hand! Fix and rerun the script instead.
################################################################################

from libc.stdio cimport FILE
from sage.libs.gmp.types cimport *
from sage.libs.mpfr.types cimport *
from sage.libs.flint.types cimport *

cdef extern from "flint_wrap.h":
    mpf * _mpf_vec_init(slong len, mp_limb_t prec) noexcept
    void _mpf_vec_clear(mpf * vec, slong len) noexcept
    void _mpf_vec_randtest(mpf * f, flint_rand_t state, slong len, flint_bitcnt_t bits) noexcept
    void _mpf_vec_zero(mpf * vec, slong len) noexcept
    void _mpf_vec_set(mpf * vec1, const mpf * vec2, slong len2) noexcept
    void _mpf_vec_set_fmpz_vec(mpf * appv, const fmpz * vec, slong len) noexcept
    bint _mpf_vec_equal(const mpf * vec1, const mpf * vec2, slong len) noexcept
    bint _mpf_vec_is_zero(const mpf * vec, slong len) noexcept
    bint _mpf_vec_approx_equal(const mpf * vec1, const mpf * vec2, slong len, flint_bitcnt_t bits) noexcept
    void _mpf_vec_add(mpf * res, const mpf * vec1, const mpf * vec2, slong len2) noexcept
    void _mpf_vec_sub(mpf * res, const mpf * vec1, const mpf * vec2, slong len2) noexcept
    void _mpf_vec_scalar_mul_mpf(mpf * res, const mpf * vec, slong len, mpf_t c) noexcept
    void _mpf_vec_scalar_mul_2exp(mpf * res, const mpf * vec, slong len, flint_bitcnt_t exp) noexcept
    void _mpf_vec_dot(mpf_t res, const mpf * vec1, const mpf * vec2, slong len2) noexcept
    void _mpf_vec_norm(mpf_t res, const mpf * vec, slong len) noexcept
    int _mpf_vec_dot2(mpf_t res, const mpf * vec1, const mpf * vec2, slong len2, flint_bitcnt_t prec) noexcept
    void _mpf_vec_norm2(mpf_t res, const mpf * vec, slong len, flint_bitcnt_t prec) noexcept
