# distutils: libraries = flint
# distutils: depends = flint/d_vec.h

################################################################################
# This file is auto-generated by the script
#   SAGE_ROOT/src/sage_setup/autogen/flint_autogen.py.
# From the commit 3e2c3a3e091106a25ca9c6fba28e02f2cbcd654a
# Do not modify by hand! Fix and rerun the script instead.
################################################################################

from libc.stdio cimport FILE
from sage.libs.gmp.types cimport *
from sage.libs.mpfr.types cimport *
from sage.libs.flint.types cimport *

cdef extern from "flint_wrap.h":
    double * _d_vec_init(slong len) noexcept
    void _d_vec_clear(double * vec) noexcept
    void _d_vec_randtest(double * f, flint_rand_t state, slong len, slong minexp, slong maxexp) noexcept
    void _d_vec_set(double * vec1, const double * vec2, slong len2) noexcept
    void _d_vec_zero(double * vec, slong len) noexcept
    bint _d_vec_equal(const double * vec1, const double * vec2, slong len) noexcept
    bint _d_vec_is_zero(const double * vec, slong len) noexcept
    bint _d_vec_is_approx_zero(const double * vec, slong len, double eps) noexcept
    bint _d_vec_approx_equal(const double * vec1, const double * vec2, slong len, double eps) noexcept
    void _d_vec_add(double * res, const double * vec1, const double * vec2, slong len2) noexcept
    void _d_vec_sub(double * res, const double * vec1, const double * vec2, slong len2) noexcept
    double _d_vec_dot(const double * vec1, const double * vec2, slong len2) noexcept
    double _d_vec_norm(const double * vec, slong len) noexcept
    double _d_vec_dot_heuristic(const double * vec1, const double * vec2, slong len2, double * err) noexcept
    double _d_vec_dot_thrice(const double * vec1, const double * vec2, slong len2, double * err) noexcept
