# distutils: libraries = flint
# distutils: depends = flint/arith.h

################################################################################
# This file is auto-generated by the script
#   SAGE_ROOT/src/sage_setup/autogen/flint_autogen.py.
# From the commit 3e2c3a3e091106a25ca9c6fba28e02f2cbcd654a
# Do not modify by hand! Fix and rerun the script instead.
################################################################################

from libc.stdio cimport FILE
from sage.libs.gmp.types cimport *
from sage.libs.mpfr.types cimport *
from sage.libs.flint.types cimport *

cdef extern from "flint_wrap.h":
    void arith_primorial(fmpz_t res, slong n) noexcept
    void _arith_harmonic_number(fmpz_t num, fmpz_t den, slong n) noexcept
    void arith_harmonic_number(fmpq_t x, slong n) noexcept
    void arith_stirling_number_1u(fmpz_t s, ulong n, ulong k) noexcept
    void arith_stirling_number_1(fmpz_t s, ulong n, ulong k) noexcept
    void arith_stirling_number_2(fmpz_t s, ulong n, ulong k) noexcept
    void arith_stirling_number_1u_vec(fmpz * row, ulong n, slong klen) noexcept
    void arith_stirling_number_1_vec(fmpz * row, ulong n, slong klen) noexcept
    void arith_stirling_number_2_vec(fmpz * row, ulong n, slong klen) noexcept
    void arith_stirling_number_1u_vec_next(fmpz * row, const fmpz * prev, slong n, slong klen) noexcept
    void arith_stirling_number_1_vec_next(fmpz * row, const fmpz * prev, slong n, slong klen) noexcept
    void arith_stirling_number_2_vec_next(fmpz * row, const fmpz * prev, slong n, slong klen) noexcept
    void arith_stirling_matrix_1u(fmpz_mat_t mat) noexcept
    void arith_stirling_matrix_1(fmpz_mat_t mat) noexcept
    void arith_stirling_matrix_2(fmpz_mat_t mat) noexcept
    void arith_bell_number(fmpz_t b, ulong n) noexcept
    void arith_bell_number_dobinski(fmpz_t res, ulong n) noexcept
    void arith_bell_number_multi_mod(fmpz_t res, ulong n) noexcept
    void arith_bell_number_vec(fmpz * b, slong n) noexcept
    void arith_bell_number_vec_recursive(fmpz * b, slong n) noexcept
    void arith_bell_number_vec_multi_mod(fmpz * b, slong n) noexcept
    mp_limb_t arith_bell_number_nmod(ulong n, nmod_t mod) noexcept
    void arith_bell_number_nmod_vec(mp_ptr b, slong n, nmod_t mod) noexcept
    void arith_bell_number_nmod_vec_recursive(mp_ptr b, slong n, nmod_t mod) noexcept
    void arith_bell_number_nmod_vec_ogf(mp_ptr b, slong n, nmod_t mod) noexcept
    int arith_bell_number_nmod_vec_series(mp_ptr b, slong n, nmod_t mod) noexcept
    double arith_bell_number_size(ulong n) noexcept
    void _arith_bernoulli_number(fmpz_t num, fmpz_t den, ulong n) noexcept
    void arith_bernoulli_number(fmpq_t x, ulong n) noexcept
    void _arith_bernoulli_number_vec(fmpz * num, fmpz * den, slong n) noexcept
    void arith_bernoulli_number_vec(fmpq * x, slong n) noexcept
    void arith_bernoulli_number_denom(fmpz_t den, ulong n) noexcept
    double arith_bernoulli_number_size(ulong n) noexcept
    void arith_bernoulli_polynomial(fmpq_poly_t poly, ulong n) noexcept
    void _arith_bernoulli_number_vec_recursive(fmpz * num, fmpz * den, slong n) noexcept
    void _arith_bernoulli_number_vec_multi_mod(fmpz * num, fmpz * den, slong n) noexcept
    void arith_euler_number(fmpz_t res, ulong n) noexcept
    void arith_euler_number_vec(fmpz * res, slong n) noexcept
    double arith_euler_number_size(ulong n) noexcept
    void arith_euler_polynomial(fmpq_poly_t poly, ulong n) noexcept
    void arith_euler_phi(fmpz_t res, const fmpz_t n) noexcept
    int arith_moebius_mu(const fmpz_t n) noexcept
    void arith_divisor_sigma(fmpz_t res, ulong k, const fmpz_t n) noexcept
    void arith_divisors(fmpz_poly_t res, const fmpz_t n) noexcept
    void arith_ramanujan_tau(fmpz_t res, const fmpz_t n) noexcept
    void arith_ramanujan_tau_series(fmpz_poly_t res, slong n) noexcept
    void arith_landau_function_vec(fmpz * res, slong len) noexcept
    void arith_dedekind_sum_naive(fmpq_t s, const fmpz_t h, const fmpz_t k) noexcept
    double arith_dedekind_sum_coprime_d(double h, double k) noexcept
    void arith_dedekind_sum_coprime_large(fmpq_t s, const fmpz_t h, const fmpz_t k) noexcept
    void arith_dedekind_sum_coprime(fmpq_t s, const fmpz_t h, const fmpz_t k) noexcept
    void arith_dedekind_sum(fmpq_t s, const fmpz_t h, const fmpz_t k) noexcept
    void arith_number_of_partitions_vec(fmpz * res, slong len) noexcept
    void arith_number_of_partitions_nmod_vec(mp_ptr res, slong len, nmod_t mod) noexcept
    void arith_hrr_expsum_factored(trig_prod_t prod, mp_limb_t k, mp_limb_t n) noexcept
    void arith_number_of_partitions_mpfr(mpfr_t x, ulong n) noexcept
    void arith_number_of_partitions(fmpz_t x, ulong n) noexcept
    void arith_sum_of_squares(fmpz_t r, ulong k, const fmpz_t n) noexcept
    void arith_sum_of_squares_vec(fmpz * r, ulong k, slong n) noexcept
