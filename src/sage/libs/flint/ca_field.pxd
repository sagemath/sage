# distutils: libraries = flint
# distutils: depends = flint/ca_field.h

################################################################################
# This file is auto-generated by the script
#   SAGE_ROOT/src/sage_setup/autogen/flint_autogen.py.
# From the commit 3e2c3a3e091106a25ca9c6fba28e02f2cbcd654a
# Do not modify by hand! Fix and rerun the script instead.
################################################################################

from libc.stdio cimport FILE
from sage.libs.gmp.types cimport *
from sage.libs.mpfr.types cimport *
from sage.libs.flint.types cimport *

cdef extern from "flint_wrap.h":
    void ca_field_init_qq(ca_field_t K, ca_ctx_t ctx) noexcept
    void ca_field_init_nf(ca_field_t K, const qqbar_t x, ca_ctx_t ctx) noexcept
    void ca_field_init_const(ca_field_t K, calcium_func_code func, ca_ctx_t ctx) noexcept
    void ca_field_init_fx(ca_field_t K, calcium_func_code func, const ca_t x, ca_ctx_t ctx) noexcept
    void ca_field_init_fxy(ca_field_t K, calcium_func_code func, const ca_t x, const ca_t y, ca_ctx_t ctx) noexcept
    void ca_field_init_multi(ca_field_t K, slong len, ca_ctx_t ctx) noexcept
    void ca_field_set_ext(ca_field_t K, slong i, ca_ext_srcptr x_index, ca_ctx_t ctx) noexcept
    void ca_field_clear(ca_field_t K, ca_ctx_t ctx) noexcept
    void ca_field_print(const ca_field_t K, ca_ctx_t ctx) noexcept
    void ca_field_build_ideal(ca_field_t K, ca_ctx_t ctx) noexcept
    void ca_field_build_ideal_erf(ca_field_t K, ca_ctx_t ctx) noexcept
    int ca_field_cmp(const ca_field_t K1, const ca_field_t K2, ca_ctx_t ctx) noexcept
    void ca_field_cache_init(ca_field_cache_t cache, ca_ctx_t ctx) noexcept
    void ca_field_cache_clear(ca_field_cache_t cache, ca_ctx_t ctx) noexcept
    ca_field_ptr ca_field_cache_insert_ext(ca_field_cache_t cache, ca_ext_struct ** x, slong len, ca_ctx_t ctx) noexcept
