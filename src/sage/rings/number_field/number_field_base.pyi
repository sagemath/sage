from typing import Any, Tuple

def number_field_base(x: Any) -> bool:
    ...

class NumberFieldBase:
    def _pushout_(self, other: Any) -> Any:
        ...

    def ring_of_integers(self, *args: Any, **kwds: Any) -> Any:
        ...

    def OK(self, *args: Any, **kwds: Any) -> Any:
        ...

    def maximal_order(self) -> Any:
        ...

    def is_absolute(self) -> bool:
        ...

    def signature(self) -> Tuple[int, int]:
        ...

    def degree(self) -> int:
        ...

    def discriminant(self) -> int:
        ...

    def minkowski_bound(self) -> Any:
        ...

    def bach_bound(self) -> Any:
        ...

    def _init_embedding_approx(self) -> None:
        ...

    def _get_embedding_approx(self, i: int) -> Any:
        ...

    def _matrix_charpoly(self, M: Any, var: str) -> Any:
        ...
