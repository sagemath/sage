# Simple pattern exclusions

- name: 'foreign_latex: foreign commands in LaTeX'
  hint: |
    use equivalent LaTeX commands instead of plain TeX commands such as \over, \choose, etc.
  pattern: '(\\choose|\\atop|\\above|\\overwithdelims|\\atopwithdelims|\\abovewithdelims)'
  # \over appears in bad latex code coming from Fricas and Maxima

- name: 'blocks: wrong syntax for blocks (INPUT, OUTPUT, EXAMPLES, NOTE, etc.)'
  hint: |
    # the correct syntax is .. SEEALSO::
    # TESTS and EXAMPLES should be plural, NOTE singular
    # no :: after INPUT, OUTPUT, REFERENCE blocks
    # no " :" at the end of lines
  pattern: '(\.\.SEE|SEE ALSO|SEEALSO:($|[^:])|^\s*TEST:|^\s*EXAMPLE:|^\s*NOTES:|^\s*[A-Z]*PUT::|^\s*REFERENCES?::$)'

- name: 'trac_links: bad trac link'
  hint: |
    the correct syntax for trac roles is :trac:`NUMBER`, note the initial colon
  pattern: '[^:]trac:`[0-9]'

- name: 'triple_colon: triple colon (::: or : ::)'
  pattern: ':[ 	]*::$'

# From various typo tickets

# https://github.com/sagemath/sage/issues/30585
- name: 'typo "homogenous" detected'
  hint: |
    in mathematics it should be "homogeneous"
  pattern: 'homogenous'

# Modularization anti-patterns

- name: 'namespace_pkg_all_import: import from .all of a namespace package'
  hint: |
    Sage library code should not import from sage.PAC.KAGE.all.
  pattern: 'from\s+sage(|[.](arith|categories|combinat|crypto|databases|data_structures|dynamics|ext|game_theory|games|geometry|graphs|groups|interfaces|manifolds|matrix|matroids|misc|modules|monoids|numerical|probability|quadratic_forms|quivers|rings|sat|schemes|sets|stats|symbolic|tensor)[a-z0-9_.]*|[.]libs)[.]all\s+import'
  # imports from .all are allowed in all.py; also allow in some modules that need sage.all
  filePattern: '(.*/|)(?!(all|benchmark|dev_tools|parsing|sage_eval|explain_pickle|.*_test|eval_cmd))[^/.]*[.](py|pyx|pxi)$'

- name: 'namespace_pkg_all_import_2: Module-level import of .all of a namespace package'
  hint: |
    Sage library code should not import sage.PAC.KAGE.all when sage.PAC.KAGE is an implicit
    namespace package. Type import_statements("SOME_IDENTIFIER") to find a more specific import,
    and rewrite the import statement as "from sage.PAC.KAGE.MODULE import ..."
    or "lazy_import('sage.PAC.KAGE.MODULE', '...')".
  # Keep in sync with above; but for now we ignore sage.{arith,categories}
  pattern: '^import\s+sage(|[.](combinat|crypto|databases|data_structures|dynamics|ext|game_theory|games|geometry|graphs|groups|interfaces|manifolds|matrix|matroids|misc|modules|monoids|numerical|probability|quadratic_forms|quivers|rings|sat|schemes|sets|stats|symbolic|tensor)[a-z0-9_.]*|[.]libs)[.]all'
  # imports from .all are allowed in all.py; also allow in some modules that need sage.all
  filePattern: '(.*/|)(?!(all|benchmark|dev_tools|parsing|sage_eval|explain_pickle|.*_test))[^/.]*[.](py|pyx|pxi)$'

# Magic doctest comments

- name: 'multiline_doctest_comment: magic comment on a continuation line'
  hint: |
    magic doctest comments should appear on the "sage:" line, not "....:" lines
  # see optional_regex in src/sage/doctest/parsing.py
  # "indirect doctest" is from src/bin/sage-coverage
  pattern: '^[ 	]*[.][.][.][.]:.*#.*(py2|py3|long time|not implemented|not tested|known bug|optional|indirect doctest)'
