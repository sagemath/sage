===========================
Sage에 오신 것을 환영합니다
===========================

여기서 우리는 Sage를 계산기로 사용하는 간단한 여행을 할 것입니다.

Sage의 명령줄은 ``sage:`` 프롬프트로 시작합니다. 다음 예제들을 실행하려면
프롬프트 다음 부분만 입력하면 됩니다.

::

    sage: 3 + 5
    8

Jupyter 노트북에서 Sage를 사용하는 경우에도 마찬가지로 프롬프 이후의
모든 내용을 입력 셀에 넣고 :kbd:`Shift-Enter` 를 눌러 해당 출력을 얻으세요.

``^`` 기호는 거듭제곱을 의미합니다.

::

    sage: 57.1^100
    4.60904368661396e175

Sage에서 :math:`2 \times 2` 행렬의 역행렬을 계산하여 봅시다.

::

    sage: matrix([[1, 2], [3, 4]])^(-1)
    [  -2    1]
    [ 3/2 -1/2]

이제 간단한 함수의 적분을 계산합니다.

::

    sage: x = var('x')   # 변수 기호를 만듭니다
    sage: integrate(sqrt(x) * sqrt(1 + x), x)
    1/4*((x + 1)^(3/2)/x^(3/2) + sqrt(x + 1)/sqrt(x))/((x + 1)^2/x^2 - 2*(x + 1)/x + 1)
    - 1/8*log(sqrt(x + 1)/sqrt(x) + 1) + 1/8*log(sqrt(x + 1)/sqrt(x) - 1)

이것은 Sage에게 이차 방정식을 풀게 합니다. 기호 ``==`` 는 Sage에서 등식을 나타냅니다.

::

    sage: a = var('a')
    sage: S = solve(x^2 + x == a, x); S
    [x == -1/2*sqrt(4*a + 1) - 1/2, x == 1/2*sqrt(4*a + 1) - 1/2]

결과는 등식의 목록입니다.

.. link

::

    sage: S[0].rhs()  # right hand side 즉 등식의 우변
    -1/2*sqrt(4*a + 1) - 1/2

Sage는 다양한 함수의 그래프를 생성할 수도 있습니다.

::

    sage: show(plot(sin(x) + sin(1.6*x), 0, 40))

.. image:: sin_plot.*


Sage는 매우 강력한 계산기입니다. 이를 확인하기 위하여 무작위 수로 이루어진
:math:`500 \times 500` 행렬을 생성해 보세요.

::

    sage: m = random_matrix(RDF, 500)

Sage는 이 행렬의 고유값을 계산하고 그래픽으로 표시하는 데 1 초가 걸립니다.

.. link

::

    sage: e = m.eigenvalues()  # 약 1 초
    sage: w = [(i, abs(e[i])) for i in range(len(e))]
    sage: show(points(w))

.. image:: eigen_plot.*


Sage는 수백만 또는 수십억 자리의 큰 수도 처리할 수 있습니다.

::

    sage: factorial(100)
    93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000

::

    sage: n = factorial(1000000)  # περίπου 1 δευτερόλεπτο
    sage: len(n.digits())
    5565709

여기에서 우리는 :math:`\pi` 의 소숫점 이하 100 자리를 계산합니다.

::

    sage: N(pi, digits=100)
    3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117068

다음은 Sage에게 이변수 다항식을 인수분해하도록 요청합니다.

::

    sage: R.<x,y> = QQ[]
    sage: F = factor(x^99 + y^99)
    sage: F
    (x + y) * (x^2 - x*y + y^2) * (x^6 - x^3*y^3 + y^6) *
    (x^10 - x^9*y + x^8*y^2 - x^7*y^3 + x^6*y^4 - x^5*y^5 +
     x^4*y^6 - x^3*y^7 + x^2*y^8 - x*y^9 + y^10) *
    (x^20 + x^19*y - x^17*y^3 - x^16*y^4 + x^14*y^6 + x^13*y^7 -
     x^11*y^9 - x^10*y^10 - x^9*y^11 + x^7*y^13 + x^6*y^14 -
     x^4*y^16 - x^3*y^17 + x*y^19 + y^20) * (x^60 + x^57*y^3 -
     x^51*y^9 - x^48*y^12 + x^42*y^18 + x^39*y^21 - x^33*y^27 -
     x^30*y^30 - x^27*y^33 + x^21*y^39 + x^18*y^42 - x^12*y^48 -
     x^9*y^51 + x^3*y^57 + y^60)
    sage: F.expand()
    x^99 + y^99

Sage는 1억을 양의 정수의 합으로 표현하는 방법의 수를 계산하는 데에 1초 미만이 소요됩니다.

::

    sage: z = Partitions(10^8).cardinality()  # περίπου .1 δευτερόλεπτα
    sage: z
    1760517045946249141360373894679135204009...

Sage는 세계에서 가장 앞선 오픈소스 수학 소프트웨어입니다.
