.. _chapter-interactive_shell:

**********************
Το διαδραστικό κέλυφος
**********************

Εκκινώντας τον διερμηνέα Sage με την εντολή ``sage``, εκκινείται μία
τροποποιημένη έκδοση του κελύφους ``IPython``, η οποία εισαγάγει πολλές
συναρτήσεις και κλάσεις -- έτοιμες προς χρήση.

.. CODE-BLOCK:: text

    ┌────────────────────────────────────────────────────────────────────┐
    │ SageMath version X.X, Release Date: YYYY-MM-DD                     │
    │ Using Python X.X.X. Type "help()" for help.                        │
    └────────────────────────────────────────────────────────────────────┘
    sage:

Για να εξέλθετε από το Sage πληκτρολογείστε :kbd:`Ctrl+d` (ή ``quit`` ή
``exit``).

(Αποφύγετε τον τερματισμό μέσω αποστολής σήματος, όπως ``kill -9``,
καθώς αυτό ενδέχεται να μην τερματίσει κάποιες διεργασίες ή μπορεί να μην
εκκαθαρίσει προσωρινά αρχεία.)

Χρήσιμες συντομεύσεις και εντολές
=================================

- ``?`` -- εμφάνιση βοήθειας για κάποια συνάρτηση

- ``??`` -- εμφάνιση πηγαίου κώδικα συνάρτησης

- ``help()`` -- εμφάνιση εγχειριδίου εντολής ή κλάσης (``q`` για έξοδο)

- ``!`` -- χρήση πριν από την εισαγωγή οποιασδήποτε UNIX εντολής

- ``_`` -- τελευταία μη κενή έξοδος

- ``__`` -- προτελευταία μη κενή έξοδος

- ``ih``, ``_oh`` -- λίστα εισόδων και εξόδων των εντολών της συνεδρίας

- :kbd:`Ctrl+r` -- αναζήτηση στις παρελθούσες εντολές

- ``%history`` ή ``%hist`` -- επιστρέφει τη λίστα όλων των προηγουμένων εντολών
  της τρέχουσας συνεδρίας

- ``%time`` -- προηγείται μίας εντολής και εμφανίζει τον χρόνο εκτέλεσής της

- ``timeit()`` -- εμφάνιση στοιχείων χρόνου εκτέλεση εντολής έπειτα από
  επαναλαμβανόμενες εκτελέσεις· η εντολή εισάγεται ως συμβολοσειρά (εντός
  ``""``)

- ``cputime()`` -- εμφανίζει τον χρόνο επεξεργασίας· παράδειγμα [1]_

- ``walltime()`` -- όμοια εντολή με την ``cputime()``, μόνο που μετράει
  «πραγματικό» χρόνο, όπως θα τον μετρούσε το ρολόι τοίχου σας

- ``%macro`` -- δημιουργία μακροεντολής (συντόμευση για σειρά εντολών)·
  παράδειγμα [2]_

- ``logstart`` -- αρχή καταγραφής συνεδρίας εντολών εισόδου· φόρτωση και
  επανεκτέλεση μέσω της εντολής ``load()``

- ``save_session()`` -- αποθήκευση συνεδρίας

- ``load_session()`` -- φόρτωση συνεδρίας

Μερικά παραδείγματα
===================

.. [1] ``cputime()``

.. skip

::

    sage: t = cputime()
    sage: a = int(1938) ^ int(99484)
    sage: b = 1938 ^ 99484
    sage: c = pari(1938) ^ pari(99484)
    sage: cputime(t)
    0.11

.. [2] ``%macro``

.. skip

::

    sage: E = EllipticCurve([1,2,3,4,5])
    sage: M = ModularSymbols(37)
    sage: %hist
    E = EllipticCurve([1,2,3,4,5])
    M = ModularSymbols(37)
    %hist
    sage: %macro em 1-2
    Macro `em` created. To execute, type its name (without quotes).
    === Macro contents: ===
    E = EllipticCurve([Integer(1),Integer(2),Integer(3),Integer(4),Integer(5)])
    M = ModularSymbols(Integer(37))
