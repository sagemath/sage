name: Build & Test using Conda

on:
  push:
    tags:
      - '*'
    branches:
      - 'public/build/**-runci'
  pull_request:
  workflow_dispatch:
    # Allow to run manually

concurrency:
  # Cancel previous runs of this workflow for the same branch
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Conda
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        # On pushes to tags or branches, test the whole matrix.
        os: >-
          ${{ github.event_name == 'pull_request'
                && fromJson('["ubuntu-latest", "macos-latest"]')
                || fromJson('["ubuntu-latest", "macos-latest", "macos-13"]') }}
        python: ['3.11', '3.12']
        # Optional environment is disabled for now as its not yet working
        # environment: [environment, environment-optional]
        conda-env: [environment]

    steps:
      - uses: actions/checkout@v4

      - name: Merge CI fixes from sagemath/sage
        run: |
          .ci/merge-fixes.sh
        env:
          GH_TOKEN: ${{ github.token }}
          SAGE_CI_FIXES_FROM_REPOSITORIES: ${{ vars.SAGE_CI_FIXES_FROM_REPOSITORIES }}

      - name: Cache conda packages
        uses: actions/cache@v4
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-${{ hashFiles('environment-3.11.yml') }}

      - name: Setup Conda environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: ${{ matrix.python }}
          miniforge-version: latest
          use-mamba: true
          channels: conda-forge
          channel-priority: true
          activate-environment: sage-dev
          environment-file: ${{ matrix.conda-env }}-${{ matrix.python }}-${{ startsWith(matrix.os, 'macos') && (startsWith(runner.arch, 'ARM') && 'macos' || 'macos-x86_64') || 'linux' }}.yml

      - name: Print Conda environment
        shell: bash -l {0}
        run: |
          conda info
          conda list

      - name: Bootstrap
        shell: bash -l {0}
        continue-on-error: true
        run: |
          ./bootstrap

      - name: Build
        shell: bash -l {0}
        run: |
          # Use --no-deps and pip check below to verify that all necessary dependencies are installed via conda.
          pip install --no-build-isolation --no-deps --config-settings editable_mode=compat -v -v -e ./src
        env:
          SAGE_NUM_THREADS: 5

      - name: Verify dependencies
        if: success() || failure()
        shell: bash -l {0}
        run: pip check

      - name: Test
        if: success() || failure()
        shell: bash -l {0}
        run: ./sage -t --all --baseline-stats-path=.github/workflows/ci-conda-known-test-failures.json -p0

      - name: Print logs
        if: always()
        run: |
          for file in $(find . -type f -name "*.log"); do
              echo "::group::$file"
              cat "$file"
              echo "::endgroup::"
          done
